import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

/**
 * Creates the GUI for the class path
 */
public class ClassPathGUI {
	private JTextArea scheduleField;
	private JPanel classPanel;
	private JButton confirmButton;
	private JButton previousButton;
	private JLabel entryLabel;
	private JLabel displayDistancePath;
	private JLabel displayPath;
	private JButton clearButton;
	private ArrayList<Integer> inputSet;

	/**
	 * Creates the main frame of the class path.
	 */
	public static void createFrame() {
		JFrame frame = new JFrame("Class Path");
		frame.setContentPane(new ClassPathGUI().classPanel);
		frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		frame.pack();
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);
	}

	/**
	 * Creates the class path fields, buttons, and the action listeners.
	 */
	public ClassPathGUI() {
		$$$setupUI$$$();
		inputSet = new ArrayList<>();

		confirmButton.addActionListener(e -> {
			displayDistancePath.setText("Shortest distance to your class: " + displayDistance());
			displayPath.setText("Shortest path to your class: " + displayPath() + "\n");

		});

		previousButton.addActionListener(e -> {
			((JFrame) classPanel.getTopLevelAncestor()).dispose();
		});

		clearButton.addActionListener(e -> {
			ClassPath.reset();
			displayDistancePath.setText("");
			displayPath.setText("");
			scheduleField.setText("");
			inputSet.clear();

		});
	}

	/**
	 * Gets the user input from the text field.
	 * @return the array list of inputs
     */
	private ArrayList<Integer> getInput() {
		String input = scheduleField.getText();
		String[] classes = input.split(" ");
		for (int i = 0; i < classes.length; i++) {
			inputSet.add(Integer.parseInt(classes[i]));
		}
		return inputSet;
	}

	/**
	 * Displays the distance in miles of the shortest path.
	 * @return the distance, in miles
     */
	private String displayDistance() {
		ClassPath classPath = new ClassPath(getInput());
		String distance;
		for (int i = 0; i < classPath.classes.size(); i++) {
			ClassPath.dijkstra(ClassPath.graph, classPath.classes.get(i), classPath.classes);
		}
		distance = ClassPath.getTotal();
		return distance;
	}

	/**
	 * Displays the path between two user inputted points.
	 * @return the path
     */
	public String displayPath() {
		ClassPath classPath = new ClassPath(getInput());
		String path = "";
		for (int i = 0; i < classPath.classes.size(); i++) {
			path += ClassPath.dijkstra(ClassPath.graph, classPath.classes.get(i), classPath.classes) + "\n";
		}
		return path;
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		classPanel = new JPanel();
		classPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(9, 4, new Insets(0, 0, 0, 0), -1, -1));
		classPanel.setMaximumSize(new Dimension(900, 700));
		classPanel.setMinimumSize(new Dimension(800, 600));
		classPanel.setPreferredSize(new Dimension(900, 700));
		final JLabel label1 = new JLabel();
		label1.setFont(new Font(label1.getFont().getName(), label1.getFont().getStyle(), 36));
		label1.setText("ClassPath");
		classPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final JLabel label2 = new JLabel();
		label2.setIcon(new ImageIcon(getClass().getResource("/classpather.jpg")));
		label2.setText("");
		classPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		entryLabel = new JLabel();
		entryLabel.setEnabled(true);
		entryLabel.setFont(new Font(entryLabel.getFont().getName(), entryLabel.getFont().getStyle(), 24));
		entryLabel.setText("Enter your schedule via number");
		classPanel.add(entryLabel, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		scheduleField = new JTextArea();
		scheduleField.setFont(new Font(scheduleField.getFont().getName(), scheduleField.getFont().getStyle(), 12));
		classPanel.add(scheduleField, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(250, 25), null, 0, false));
		confirmButton = new JButton();
		confirmButton.setText("Go");
		classPanel.add(confirmButton, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		previousButton = new JButton();
		previousButton.setText("Previous");
		classPanel.add(previousButton, new com.intellij.uiDesigner.core.GridConstraints(7, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		displayDistancePath = new JLabel();
		displayDistancePath.setText("");
		classPanel.add(displayDistancePath, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		displayPath = new JLabel();
		displayPath.setText("");
		classPanel.add(displayPath, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
		classPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(8, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 75), null, 0, false));
		clearButton = new JButton();
		clearButton.setText("Clear");
		classPanel.add(clearButton, new com.intellij.uiDesigner.core.GridConstraints(7, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
		classPanel.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, new Dimension(50, -1), null, 0, false));
		final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
		classPanel.add(spacer3, new com.intellij.uiDesigner.core.GridConstraints(1, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, new Dimension(50, -1), null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return classPanel;
	}
}
